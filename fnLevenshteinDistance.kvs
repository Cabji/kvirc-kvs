/* This is a rough implementation of the Levenshtein Distance algorithm.
  This algorithm is used to determine how similar two strings are to each other by calculating the number of individual changes it would 
  take to make one of the strings exactly the same as the other.
  
  For now, this is just the rough code I have started with to create the matrix that holds the distance data. 
  If you run this code in script tester it will echo out some information about the strings and display the matrix for you.
  The value in the bottom-right corner of the matrix should be the minimum number of changes required to make the two strings exactly 
  the same.
  
  A value of 0 in the bottom-right corner would mean that the two strings are exactly the same.
*/

clear

%string1 = Sunday
%string2 = Saturday

%s1 = %G_hush->%common->$fnArrayRemoveEmptyValues($str.split("",%string1))
%s2 = %G_hush->%common->$fnArrayRemoveEmptyValues($str.split("",%string2))

# string padding
%diff = $integer($(%s1[]# - %s2[]#))
echo diff: %diff
if (%diff != 0)
{
	for (%i = 0; %i < $math.abs(%diff); %i++)
		%temp[%i] = " ";
	if (%diff > 0)
	{
		%diff = $math.abs(%diff)
		# s1 is longer than s2 by abs(diff)
		echo s1 is %diff chars longer than s2
		foreach (%val, %s2)
			%temp[%temp[]#] = %val;
		%s2 = %temp
	}
	else
	{
		%diff = $math.abs(%diff)
		# s2 is longer than s1 by abs(diff)
		echo s2 is %diff chars longer than s1
		foreach (%val, %s1)
			%temp[%temp[]#] = %val;
		%s1 = %temp
	}
}

echo s1: %s1
echo s2: %s2

# cost calculation
for (%i = 0; %i < $length(%s1); %i++)
{
	for (%j = 0; %j < $length(%s2); %j++)
	{
		if (%s1[%i] != %s2[%j])
		{
			#echo %s1[%i] does not match %s2[%j];
			%cost = 1;
		}
		else
			%cost = 0;

		if (%i > 0 && %j > 0)
		{
			%left = $(%ldMatrix[$(%i - 1)][%j] + 1)
			%above = $(%ldMatrix[%i][$(%j - 1)] + 1)
			%prev = $(%ldMatrix[$(%i - 1)][$(%j - 1)] + %cost)
			%smallest = $sort($array(%left, %above, %prev))
			%ldMatrix[%i][%j] = %smallest[0]
		}
		else
			%ldMatrix[%i][%j] = %cost

	}
}

# output the levenshtein distance matrix
%o = "  "
foreach (%char, %s2)
{
	%o .= %char", "
}

echo %o

for (%i = 0; %i < $length(%s1); %i++)
{
	%o = ""
	%o .= %s1[%i]" " 
	for (%j = 0; %j < $length(%s2); %j++)
	{
		%o .= %ldMatrix[%i][%j]", ";
	}
	echo %o
}

# convert the levenshtein distance cost into a percentage (float from 0 to 1)
%similarity = $(%s1[]# - %ldMatrix[$(%s1[]# - 1)][$(%s2[]# - 1)])
%simPercent = $(%similarity / $real(%s1[]#))
echo similarity: %similarity
echo simPercent: %simPercent
